spring:

  application:
    name: executor-TestPool
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration
  security:
    user.password: passwordNotUsed
    datawave:
      jwt.ttl: 3600
      issuers-required: true
      enforce-allowed-callers: false
      allowed-callers:
        - "cn=test keystore, ou=my department, o=my company, st=some-state, c=us<cn=test keystore, ou=my department, o=my company, st=some-state, c=us>"

hazelcast.client.enabled: false

server:
  port: 0
  non-secure-port: 0
  servlet.context-path: /query
  ssl:
    client-auth: NEED
    trust-store: 'classpath:testCA.p12'
    trust-store-type: PKCS12
    trust-store-password: 'ChangeIt'
    key-store: 'classpath:testServer.p12'
    key-store-type: PKCS12
    key-store-password: 'ChangeIt'
  outbound-ssl:
    key-store: ${server.ssl.key-store}
    key-store-password: ${server.ssl.key-store-password}
    key-store-type: ${server.ssl.key-store-type}
    trust-store: ${server.ssl.trust-store}
    trust-store-password: ${server.ssl.trust-store-password}
    trust-store-type: ${server.ssl.trust-store-type}

management:
  endpoints:
    web:
      base-path: "/mgmt"

logging:
  level:
    root: warn
    datawave.microservice.query.executor: ERROR
    datawave.microservice.common.storage: ERROR
    io.undertow.request: FATAL
    org.apache.kafka: ERROR
    kafka: FATAL

datawave:
  table:
    cache:
      zookeepers: 'localhost:2181'
      poolName: "default"
      reloadInterval: 360000
      evictionReaperIntervalInSeconds: 360
      numLocks: 3
      maxRetries: 3

  connection:
    factory:
      defaultPool: "none"

  query:
    metric:
      client:
        enabled: false

    executor:
      pool: "TestPool"
      pollQueueSize: true
      availableResultsPageMultiplier: 2.5
      maxQueueSize: 400
      coreThreads: 10
      maxThreads: 40
      keepAliveMs: 600000
      queryStatusExpirationMs: 60000
      checkpointFlushMs: 1000
      checkpointFlushResults: 2
      orphanThresholdMs: 2000
      maxOrphanedTasksToCheck: 100

      monitor:
        enabled: false

---

spring.config.activate.on-profile: use-test

query:
  messaging:
    backend:
      test

---

spring.config.activate.on-profile: use-rabbit

query:
  storage:
    backend:
      rabbitmq

---

spring.config.activate.on-profile: use-kafka

spring:
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: KafkaQueryQueueManager
      autoOffsetReset: latest

query:
  storage:
    backend:
      kafka

---

spring.config.activate.on-profile: use-hazelcast

query:
  messaging:
    backend:
      hazelcast
    hazelcast:
      splitBrainProtectionEnabled: false

---

spring.config.activate.on-profile: use-embedded-kafka

spring:
  kafka:
    bootstrap-servers: "${spring.embedded.kafka.brokers}"
    consumer:
      group-id: KafkaQueryQueueManager
      autoOffsetReset: latest
query:
  storage:
    backend:
      kafka

datawave:
  query:
    executor:
      pollQueueSize: false

---

spring.config.activate.on-profile: missing
